name: ci
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * 1" # weekly on Monday
permissions:
  contents: read
env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings
jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta]
        include:
          - os: ubuntu-latest
            rust: "1.78.0"
    steps:
      - uses: actions/checkout@v4
      - name: install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: check compilation
        run: cargo check --all --all-targets
      - name: run tests
        run: cargo test --all
      - name: test parse package features
        run: |
          cargo test -p puz-parse --no-default-features
          cargo test -p puz-parse --features json
      - name: test cli functionality
        run: cargo run --bin puz -- --help
  lint:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: check formatting
        run: cargo fmt --all -- --check
      - name: run clippy
        run: |
          cargo clippy --all --all-targets -- -D warnings -D clippy::all
          cargo clippy -p puz-parse --no-default-features -- -D warnings -D clippy::all
          cargo clippy -p puz-parse --features json -- -D warnings -D clippy::all
  minimal:
    name: minimal versions
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: install rust
        uses: dtolnay/rust-toolchain@nightly
      - name: cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: test minimal versions
        run: |
          cargo generate-lockfile -Z minimal-versions
          cargo check --locked --workspace
  docs:
    name: docs
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: install rust
        uses: dtolnay/rust-toolchain@stable
      - name: cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: check documentation
        run: cargo doc --no-deps --all --all-features
        env:
          RUSTDOCFLAGS: -D warnings
  cross-compile:
    name: cross-compile ${{ matrix.target }}
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name != 'schedule' # skip on weekly cron
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4
      - name: install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
      - name: test cross-compilation
        run: cargo check --target ${{ matrix.target }} --workspace
